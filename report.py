from fpdf import FPDF
import os
from datetime import datetime
from scanner.ai_explainer import explain_issue

def safe_multicell(pdf, text):
    try:
        pdf.multi_cell(0, 10, txt=text)
    except Exception:
        pdf.multi_cell(0, 10, txt="[Text rendering issue]")

def generate_report(target_url, results):
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    filename = f"scan_{datetime.now().strftime('%Y-%m-%d_%H-%M-%S')}.pdf"
    output_path = os.path.join(os.getcwd(), filename)

    pdf = FPDF()
    pdf.add_page()
    pdf.set_auto_page_break(auto=True, margin=15)
    pdf.set_font("Helvetica", "B", 16)
    pdf.cell(0, 10, txt="OWASP Scan Report", ln=True, align='C')
    
    pdf.set_font("Helvetica", "", 12)
    pdf.ln(10)
    pdf.cell(0, 10, txt=f"Target: {target_url}", ln=True)
    pdf.cell(0, 10, txt=f"Date: {timestamp}", ln=True)

    # Security Headers Section
    pdf.ln(10)
    pdf.set_font("Helvetica", "B", 14)
    pdf.cell(0, 10, txt="Security Headers", ln=True)

    pdf.set_font("Helvetica", "", 12)
    status = results.get('headers', {}).get('status', 'Unknown')
    pdf.cell(0, 10, txt=f"Status: {status}", ln=True)

    missing_headers = results.get('headers', {}).get('missing', [])
    if missing_headers:
        pdf.cell(0, 10, txt="Missing Headers:", ln=True)
        for header in missing_headers:
            try:
                explanation = explain_issue(header)
                safe_multicell(pdf, f"- {header}: {explanation}")
            except Exception:
                safe_multicell(pdf, f"- {header}: [Explanation issue]")
    else:
        pdf.cell(0, 10, txt="No missing headers detected.", ln=True)

    # Vulnerabilities Section
    pdf.ln(10)
    pdf.set_font("Helvetica", "B", 14)
    pdf.cell(0, 10, txt="Vulnerabilities", ln=True)

    pdf.set_font("Helvetica", "", 12)
    vulnerabilities = results.get("vulnerabilities", [])
    if vulnerabilities:
        for vuln in vulnerabilities:
            vtype = vuln.get("type", "Unknown")
            try:
                explanation = explain_issue(vtype)
                safe_multicell(pdf, f"- {vtype}: {explanation}")
            except Exception:
                safe_multicell(pdf, f"- {vtype}: [Explanation issue]")
    else:
        pdf.cell(0, 10, txt="No major vulnerabilities detected.", ln=True)

    # Footer
    pdf.ln(10)
    pdf.set_font("Helvetica", "I", 10)
    pdf.cell(0, 10, txt="Generated by OWASP Scanner", ln=True)

    pdf.output(output_path)
    print(f"[âœ“] Report saved to {output_path}")
